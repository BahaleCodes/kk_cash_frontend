{"ast":null,"code":"var _jsxFileName = \"/Users/thabomponya/Documents/GitHub/kkCash/client/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form__group ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: 'form__field',\n      id: props.id,\n      type: props.type,\n      placeholder: props.placeholder,\n      onChange: changeHandler,\n      onBlur: touchHandler,\n      value: inputState.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      className: \"form__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Input, \"84jicmYf+xZQt7PSXY1n44RkP8g=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/thabomponya/Documents/GitHub/kkCash/client/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","placeholder","label","errorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFR;AAGNC,QAAAA,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AAHX,OAAP;;AAKD,SAAK,OAAL;AAAc;AACb,eAAO,EACN,GAAGN,KADG;AAENO,UAAAA,SAAS,EAAE;AAFL,SAAP;AAIA;;AACD;AACC,aAAOP,KAAP;AAdF;AAgBA,CAjBD;;AAmBA,MAAMQ,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBf,UAAU,CAACG,YAAD,EAAe;AACvDI,IAAAA,KAAK,EAAEM,KAAK,CAACG,YAAN,IAAsB,EAD0B;AAEvDL,IAAAA,SAAS,EAAE,KAF4C;AAGvDF,IAAAA,OAAO,EAAEI,KAAK,CAACI,YAAN,IAAsB;AAHwB,GAAf,CAAzC;AAMA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAkBN,KAAxB;AACA,QAAM;AAAEN,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAqBK,UAA3B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,OAAO,CAACD,EAAD,EAAKX,KAAL,EAAYE,OAAZ,CAAP;AACA,GAFQ,EAEN,CAACS,EAAD,EAAKX,KAAL,EAAYE,OAAZ,EAAqBU,OAArB,CAFM,CAAT;;AAIA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9BN,IAAAA,QAAQ,CAAC;AACRT,MAAAA,IAAI,EAAE,QADE;AAERE,MAAAA,GAAG,EAAEa,KAAK,CAACC,MAAN,CAAaf,KAFV;AAGRG,MAAAA,UAAU,EAAEG,KAAK,CAACH;AAHV,KAAD,CAAR;AAKA,GAND;;AAQA,QAAMa,YAAY,GAAG,MAAM;AAC1BR,IAAAA,QAAQ,CAAC;AACRT,MAAAA,IAAI,EAAE;AADE,KAAD,CAAR;AAGA,GAJD;;AAMA,sBACC;AACC,IAAA,SAAS,EAAG,eAAc,CAACQ,UAAU,CAACL,OAAZ,IACzBK,UAAU,CAACH,SADc,IAEzB,uBAAwB,EAH1B;AAAA,4BAKC;AACC,MAAA,SAAS,EAAE,aADZ;AAEC,MAAA,EAAE,EAAEE,KAAK,CAACK,EAFX;AAGC,MAAA,IAAI,EAAEL,KAAK,CAACP,IAHb;AAIC,MAAA,WAAW,EAAEO,KAAK,CAACW,WAJpB;AAKC,MAAA,QAAQ,EAAEJ,aALX;AAMC,MAAA,MAAM,EAAEG,YANT;AAOC,MAAA,KAAK,EAAET,UAAU,CAACP;AAPnB;AAAA;AAAA;AAAA;AAAA,YALD,eAcC;AAAO,MAAA,OAAO,EAAEM,KAAK,CAACK,EAAtB;AAA0B,MAAA,SAAS,EAAE,aAArC;AAAA,gBAAqDL,KAAK,CAACY;AAA3D;AAAA;AAAA;AAAA;AAAA,YAdD,EAeE,CAACX,UAAU,CAACL,OAAZ,IAAuBK,UAAU,CAACH,SAAlC,iBAA+C;AAAA,gBAAIE,KAAK,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YAfjD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmBA,CA/CD;;GAAMd,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.val,\n\t\t\t\tisValid: validate(action.val, action.validators)\n\t\t\t};\n\t\tcase 'TOUCH': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst Input = props => {\n\tconst [inputState, dispatch] = useReducer(inputReducer, {\n\t\tvalue: props.initialValue || '',\n\t\tisTouched: false,\n\t\tisValid: props.initialValid || false\n\t});\n\n\tconst { id, onInput } = props;\n\tconst { value, isValid } = inputState;\n\n\tuseEffect(() => {\n\t\tonInput(id, value, isValid);\n\t}, [id, value, isValid, onInput]);\n\n\tconst changeHandler = event => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tval: event.target.value,\n\t\t\tvalidators: props.validators\n\t\t});\n\t};\n\n\tconst touchHandler = () => {\n\t\tdispatch({\n\t\t\ttype: 'TOUCH'\n\t\t});\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`form__group ${!inputState.isValid &&\n\t\t\t\tinputState.isTouched &&\n\t\t\t\t'form-control--invalid'}`}\n\t\t>\n\t\t\t<input\n\t\t\t\tclassName={'form__field'}\n\t\t\t\tid={props.id}\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t\t<label htmlFor={props.id} className={\"form__label\"}>{props.label}</label>\n\t\t\t{!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}
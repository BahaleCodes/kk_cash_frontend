{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [first_name, setFirstName] = useState(false);\n  const [last_name, setLastName] = useState(false);\n  const login = useCallback((uid, token, first_name, last_name, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setFirstName(first_name);\n    setLastName(last_name);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      first_name: first_name,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setFirstName(null);\n    setLastName(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    first_name,\n    last_name\n  };\n};\n\n_s(useAuth, \"c+fyD2iz3u1gcIAs02W1CksDmQ0=\");","map":{"version":3,"sources":["/Users/thabomponya/Documents/GitHub/kkCash/client/src/shared/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","first_name","setFirstName","last_name","setLastName","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n\tconst [token, setToken] = useState(false);\n\tconst [tokenExpirationDate, setTokenExpirationDate] = useState();\n\tconst [userId, setUserId] = useState(false);\n\tconst [first_name, setFirstName] = useState(false);\n\tconst [last_name, setLastName] = useState(false);\n\n\tconst login = useCallback((uid, token, first_name, last_name, expirationDate) => {\n\t\tsetToken(token);\n\t\tsetUserId(uid);\n\t\tsetFirstName(first_name);\n\t\tsetLastName(last_name);\n\t\tconst tokenExpirationDate =\n\t\t\texpirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n\t\tsetTokenExpirationDate(tokenExpirationDate);\n\t\tlocalStorage.setItem(\n\t\t\t'userData',\n\t\t\tJSON.stringify({\n\t\t\t\tuserId: uid,\n\t\t\t\ttoken: token,\n\t\t\t\tfirst_name: first_name,\n\t\t\t\texpiration: tokenExpirationDate.toISOString()\n\t\t\t})\n\t\t);\n\t}, []);\n\n\tconst logout = useCallback(() => {\n\t\tsetToken(null);\n\t\tsetTokenExpirationDate(null);\n\t\tsetUserId(null);\n\t\tsetFirstName(null);\n\t\tsetLastName(null);\n\t\tlocalStorage.removeItem('userData');\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (token && tokenExpirationDate) {\n\t\t\tconst remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n\t\t\tlogoutTimer = setTimeout(logout, remainingTime);\n\t\t}\n\t\telse {\n\t\t\tclearTimeout(logoutTimer);\n\t\t}\n\t}, [token, logout, tokenExpirationDate]);\n\n\tuseEffect(() => {\n\t\tconst storedData = JSON.parse(localStorage.getItem('userData'));\n\t\tif (\n\t\t\tstoredData &&\n\t\t\tstoredData.token &&\n\t\t\tnew Date(storedData.expiration) > new Date()\n\t\t) {\n\t\t\tlogin(storedData.userId, storedData.token, new Date(storedData.expiration));\n\t\t}\n\t}, [login]);\n\n\treturn { token, login, logout, userId, first_name, last_name };\n};"]},"metadata":{},"sourceType":"module"}
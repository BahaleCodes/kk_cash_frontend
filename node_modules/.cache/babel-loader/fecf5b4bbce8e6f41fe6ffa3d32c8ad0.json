{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL } from \"../URI\";\nexport const CreateAddress = async props => {\n  await axios.post(`${baseURL}address/create/${props.userId}`, {\n    \"street\": props.street_name,\n    \"suburb\": props.suburb,\n    \"city\": props.city,\n    \"province\": props.province,\n    \"postal_code\": props.postal_code\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${props.token}`\n    }\n  });\n};\n_c = CreateAddress;\nexport const FetchAddress = async () => {};\n_c2 = FetchAddress;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateAddress\");\n$RefreshReg$(_c2, \"FetchAddress\");","map":{"version":3,"sources":["/Users/thabomponya/Documents/GitHub/kkCash/client/src/api/address.js"],"names":["axios","baseURL","CreateAddress","props","post","userId","street_name","suburb","city","province","postal_code","headers","token","FetchAddress"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AAC5C,QAAMH,KAAK,CACRI,IADG,CACG,GAAEH,OAAQ,kBAAiBE,KAAK,CAACE,MAAO,EAD3C,EAEF;AACE,cAAUF,KAAK,CAACG,WADlB;AAEE,cAAUH,KAAK,CAACI,MAFlB;AAGE,YAAQJ,KAAK,CAACK,IAHhB;AAIE,gBAAYL,KAAK,CAACM,QAJpB;AAKE,mBAAeN,KAAK,CAACO;AALvB,GAFE,EASF;AACEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASR,KAAK,CAACS,KAAM;AAFhC;AADX,GATE,CAAN;AAgBD,CAjBM;KAAMV,a;AAkBb,OAAO,MAAMW,YAAY,GAAG,YAAY,CAAE,CAAnC;MAAMA,Y","sourcesContent":["import axios from \"axios\"\n\nimport { baseURL } from \"../URI\";\n\nexport const CreateAddress = async (props) => {\n  await axios\n    .post(`${baseURL}address/create/${props.userId}`,\n      {\n        \"street\": props.street_name,\n        \"suburb\": props.suburb,\n        \"city\": props.city,\n        \"province\": props.province,\n        \"postal_code\": props.postal_code\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${props.token}`\n        }\n      }\n    )\n}\nexport const FetchAddress = async () => {};\n"]},"metadata":{},"sourceType":"module"}
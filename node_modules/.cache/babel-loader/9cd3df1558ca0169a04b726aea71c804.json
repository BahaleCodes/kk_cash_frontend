{"ast":null,"code":"var _jsxFileName = \"/Users/thabomponya/Documents/GitHub/kkCash/client/src/screens/Profile/Components/ProfileAddress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card from '../../../shared/components/UIElements/Card/Card';\nimport Input from '../../../shared/components/UIElements/Input/Input';\nimport LoadingSpinner from '../../../shared/components/UIElements/Spinner/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileAddress = props => {\n  _s();\n\n  const [edit, setEdit] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`${props.URL}address/view/${props.addressId}/${props.userId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${props.token}`\n      }\n    }).then(res => {\n      setLoading(false);\n      setData(JSON.parse(JSON.stringify(res.data)));\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  }, [props.URL, props.addressId, props.token, props.userId]);\n\n  const handleInputChange = event => {\n    setData({ ...data,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const updateAddress = async () => {\n    setLoading(true);\n    await axios.put(`${props.URL}address/update/${props.addressId}/${props.userId}`, {\n      \"street\": data.street,\n      \"suburb\": data.suburb,\n      \"city\": data.city,\n      \"province\": data.province,\n      \"postal_code\": data.postal_code\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${props.token}`\n      }\n    }).then(response => {\n      setLoading(false);\n      setData({ ...data\n      });\n    }).catch(error => {\n      setLoading(false);\n      setData({ ...data\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Address Information\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEdit(!edit);\n        },\n        className: \"btn-custom\",\n        children: edit ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: data.street,\n        name: \"street\",\n        placeholder: \"Street Name\",\n        type: \"Text\",\n        disabled: !edit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: data.suburb,\n        name: \"suburb\",\n        placeholder: \"Suburb\",\n        type: \"Text\",\n        disabled: !edit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: data.city,\n        name: \"city\",\n        placeholder: \"City\",\n        type: \"Text\",\n        disabled: !edit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: data.province,\n        name: \"province\",\n        placeholder: \"Province\",\n        type: \"Text\",\n        disabled: !edit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: data.postal_code,\n        name: \"postal_code\",\n        placeholder: \"Postal Code\",\n        type: \"Number\",\n        disabled: !edit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this), edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateAddress,\n        className: \"btn-custom\",\n        disabled: !edit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileAddress, \"kyrqgv9FZGp/fTQ6Uhe5G2/MvZ0=\");\n\n_c = ProfileAddress;\nexport default ProfileAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileAddress\");","map":{"version":3,"sources":["/Users/thabomponya/Documents/GitHub/kkCash/client/src/screens/Profile/Components/ProfileAddress.js"],"names":["React","useState","useEffect","axios","Card","Input","LoadingSpinner","ProfileAddress","props","edit","setEdit","data","setData","loading","setLoading","get","URL","addressId","userId","headers","token","then","res","JSON","parse","stringify","catch","err","console","log","handleInputChange","event","target","name","value","updateAddress","put","street","suburb","city","province","postal_code","response","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Card from '../../../shared/components/UIElements/Card/Card';\nimport Input from '../../../shared/components/UIElements/Input/Input';\nimport LoadingSpinner from '../../../shared/components/UIElements/Spinner/LoadingSpinner';\n\nconst ProfileAddress = (props) => {\n    const [edit, setEdit] = useState(false);\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        axios.get(`${props.URL}address/view/${props.addressId}/${props.userId}`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${props.token}`\n                }\n            })\n            .then((res) => {\n                setLoading(false);\n                setData(JSON.parse(JSON.stringify(res.data)));\n            })\n            .catch((err) => {\n                console.log(err)\n                setLoading(false);\n            })\n    }, [props.URL, props.addressId, props.token, props.userId]);\n\n    const handleInputChange = event => {\n        setData({\n            ...data,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const updateAddress = async () => {\n        setLoading(true);\n        await axios\n            .put(`${props.URL}address/update/${props.addressId}/${props.userId}`, {\n                \"street\": data.street,\n                \"suburb\": data.suburb,\n                \"city\": data.city,\n                \"province\": data.province,\n                \"postal_code\": data.postal_code\n            },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${props.token}`\n                    }\n                }\n            )\n            .then((response) => {\n                setLoading(false);\n                setData({\n                    ...data,\n                });\n            })\n            .catch(error => {\n                setLoading(false);\n                setData({\n                    ...data,\n                })\n            });\n    }\n    return (\n        <Card>\n            <h2>Address Information\n                <button onClick={() => {\n                    setEdit(!edit)\n                }} className='btn-custom'>\n                    {\n                        edit\n                            ? <i className='fa fa-close'></i>\n                            : <i className='fa fa-edit'></i>\n                    }\n                </button>\n            </h2>\n            {\n            loading\n            ? <React.Fragment>\n                <LoadingSpinner />\n            </React.Fragment>\n            : <React.Fragment>\n                <Input value={data.street} name='street' placeholder='Street Name' type='Text' disabled={!edit} onChange={handleInputChange} />\n                <Input value={data.suburb} name='suburb' placeholder='Suburb' type='Text' disabled={!edit} onChange={handleInputChange} />\n                <Input value={data.city} name='city' placeholder='City' type='Text' disabled={!edit} onChange={handleInputChange} />\n                <Input value={data.province} name='province' placeholder='Province' type='Text' disabled={!edit} onChange={handleInputChange} />\n                <Input value={data.postal_code} name='postal_code' placeholder='Postal Code' type='Number' disabled={!edit} onChange={handleInputChange} />\n            </React.Fragment>\n}\n            {\n                edit\n                    ? <div className='btns'>\n                        <button onClick={updateAddress} className='btn-custom' disabled={!edit}>Update</button>\n                    </div>\n                    : ''\n            }\n        </Card >\n    )\n}\n\nexport default ProfileAddress;"]},"metadata":{},"sourceType":"module"}